buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.javabrains.springbootstarter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

/*sourceSets {
	main {
		resources {
			srcDirs = ["static-resources/dist", "src/main/resources"]
		}
	}
}*/

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile ('org.springframework.data:spring-data-mongodb:2.0.8.RELEASE')
	compile ('org.apache.poi:poi:3.9')
	compile("org.apache.poi:poi:3.12")
	compile("org.apache.poi:poi-ooxml:3.12")
	compile('org.springframework.boot:spring-boot-starter-mail')
}

processResources {
	dependsOn "buildAngular"
	from ('static-resources/dist/') {
		into 'public'
	}
}

task buildAngular(type:Exec) {
	dependsOn "installAngular"
	workingDir "static-resources"
	inputs.dir "static-resources"
	group = BasePlugin.BUILD_GROUP
//	outputs.dir "$webappDir/dist"
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build"
	} else {
		commandLine "ng", "build"
	}
}

//task installAngular(type:Exec) {
//	workingDir "static-resources"
//	inputs.dir "static-resources"
//	group = BasePlugin.BUILD_GROUP
////	outputs.dir "$webappDir/dist"
//	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
//		commandLine "npm.cmd", "install"
//	} else {
//		commandLine "npm", "install"
//	}
//}